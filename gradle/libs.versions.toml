[versions]

glideVersion = "4.11.0"
kotlinGradlePluginVersion = "1.4.21"
navigationVersion = "2.5.3"
lifecycleVersion = "2.5.1"
coroutinesVersion = "1.6.4"
kotlinVersion = "1.8.20"
androidGradleVersion = "8.0.2"
mockkVersion = "1.13.4"
robolectricVersion = "4.11.1"
assertJVersion = "3.22.0"
androidJUnitVersion = "1.1.5"
daggerVersion = "2.51"
javaxAnnotationVersion = "1.0"
javaxInjectVersion = "1"
retrofitVersion = "2.9.0"
okhttpVersion = "4.9.3"
gsonVersion = "2.8.9"
navigationComposeVersion = "2.7.7"
roomVersion = "2.6.1" # Check for the latest version


[libraries]

kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlinVersion" }

androidx-fragment = { module = "androidx.fragment:fragment-ktx", version = "1.5.5" }
androidx-annotation = { module = "androidx.annotation:annotation", version = "1.5.0" }
androidx-legacy = { module = "androidx.legacy:legacy-support-v4", version = "1.0.0" }
androidx-core = { module = "androidx.core:core-ktx", version = "1.9.0" }
androidx-appCompat = { module = "androidx.appcompat:appcompat", version = "1.6.0" }
androidx-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version = "2.1.4" }
androidx-vectorDrawable = { module = "androidx.vectordrawable:vectordrawable", version = "1.1.0" }
androidx-datastore = { module = "androidx.datastore:datastore-preferences", version = "1.0.0" }

kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinGradlePluginVersion" }
navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigationVersion" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigationVersion" }
navigation-testing = { module = "androidx.navigation:navigation-testing", version.ref = "navigationVersion" }

lifecycle-liveData = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleVersion" }
lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleVersion" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutinesVersion" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutinesVersion" }

javaxAnnotation = { module = "javax.annotation:jsr250-api", version.ref = "javaxAnnotationVersion" }
javaxInject = { module = "javax.inject:javax.inject", version.ref = "javaxInjectVersion" }

okhttp3-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version = "4.9.0" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glideVersion" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glideVersion" }

androidx-test-runner = { module = "androidx.test:runner", version = "1.5.2" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidJUnitVersion" }
androidx-test-junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidJUnitVersion" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version = "3.5.1" }
mockk = { module = "io.mockk:mockk", version.ref = "mockkVersion" }
robolectric= { module = "org.robolectric:robolectric", version.ref = "robolectricVersion" }
junit = { module = "junit:junit", version = "4.13.2" }
assertJ = { module = "org.assertj:assertj-core", version.ref = "assertJVersion"}

android-play-maps = { module = "com.google.android.gms:play-services-maps", version = "17.0.1" }
android-play-review = { module = "com.google.android.play:review-ktx", version = "2.0.1" }
android-play-auth = { module = "com.google.android.gms:play-services-auth", version = "20.4.1" }

android-material = { module = "com.google.android.material:material", version = "1.6.0" }
android-flexbox = { module = "com.google.android:flexbox", version = "2.0.1" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationComposeVersion"}

#novos
dagger = { module = "com.google.dagger:dagger", version.ref = "daggerVersion" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "daggerVersion" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVersion" }
retrofitGson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofitVersion" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttpVersion" }
okhttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttpVersion" }
gson = { module = "com.google.code.gson:gson", version.ref = "gsonVersion" }

room-runtime= { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
room-compiler= { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
room-ktx= { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
androidx-navigation-runtime-ktx = { group = "androidx.navigation", name = "navigation-runtime-ktx", version = "2.7.7" }
material = { group = "com.google.android.material", name = "material", version = "1.12.0" }

[bundles]

play = ["android-play-maps", "android-play-review", "android-play-auth"]
androidx-test = ["androidx-test-runner", "androidx-test-junit", "androidx-test-junit-ktx", "androidx-test-espresso-core"]
lifecycle = ["lifecycle-liveData", "lifecycle-viewModel"]
coroutines = ["coroutines-core", "coroutines-android"]
retrofit = ["retrofit", "retrofitGson", "okhttp", "okhttpLoggingInterceptor", "gson"]
navigation = ["navigation-fragment", "navigation-ui"]
androidx-design = ["androidx-constraintLayout", "androidx-vectorDrawable"]
dagger = ["dagger", "dagger-compiler"]
javax = ["javaxAnnotation", "javaxInject"]
androidx = ["lifecycle-viewModel"]
compose = ["navigation-compose"]

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradleVersion" }
android-library = { id = "com.android.library", version.ref = "androidGradleVersion" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinVersion" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinVersion" }
